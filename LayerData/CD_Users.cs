using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using LayerEntity;
using System.Data.SqlClient;
using System.Data;

namespace LayerData
{
    public class CD_Users
    {
        public List<Usuario> List()
        {
            List<Usuario> list = new List<Usuario>();

            try
            {
                using (SqlConnection oconnection = new SqlConnection(Connection.cn))
                {
                    string query = "SELECT IdUsuario, Nombres, Apellidos, Correo, Clave, Reestablecer, Activo FROM USUARIO";
                    SqlCommand cmd = new SqlCommand(query, oconnection);
                    cmd.CommandType = CommandType.Text;
                    oconnection.Open();
                    using (SqlDataReader dr = cmd.ExecuteReader())
                    {
                        while (dr.Read())
                        {
                            list.Add(
                                new Usuario()
                                {
                                    IdUsuario = Convert.ToInt32(dr["IdUsuario"]),
                                    Nombres = dr["Nombres"].ToString(),
                                    Apellidos = dr["Apellidos"].ToString(),
                                    Correo = dr["Correo"].ToString(),
                                    Clave = dr["Clave"].ToString(),
                                    Reestablecer = Convert.ToBoolean(dr["Reestablecer"]),
                                    Activo = Convert.ToBoolean(dr["Activo"])
                                }
                            );

                        }
                    }
                }
            }
            catch
            {
                list = new List<Usuario>();

            }

            return list;
        }
        public int Register(Usuario obj, out string Mensaje)
        {
            int idautogenerated = 0;
            Mensaje = string.Empty;
            try
            {
                using (SqlConnection oconnection = new SqlConnection(Connection.cn))
                {
                    SqlCommand cmd = new SqlCommand("sp_RegisterUser", oconnection);
                    cmd.Parameters.AddWithValue("Nombres", obj.Nombres);
                    cmd.Parameters.AddWithValue("Apellidos", obj.Apellidos);
                    cmd.Parameters.AddWithValue("Correo", obj.Correo);
                    cmd.Parameters.AddWithValue("Clave", obj.Clave);
                    cmd.Parameters.AddWithValue("Activo", obj.Activo);
                    cmd.Parameters.Add("Resultado", SqlDbType.Int).Direction = ParameterDirection.Output;
                    cmd.Parameters.Add("Mensaje", SqlDbType.VarChar, 500).Direction = ParameterDirection.Output;
                    cmd.CommandType = CommandType.StoredProcedure;
                    oconnection.Open();
                    cmd.ExecuteNonQuery();
                    idautogenerated = Convert.ToInt32(cmd.Parameters["Resultado"].Value);
                    Mensaje = cmd.Parameters["Mensaje"].Value.ToString();
                    // use another way to insert data
                    // SqlCommand cmd = new SqlCommand("insert into USUARIO (Nombres, Apellidos, Correo, Clave, Activo) values (@Nombres, @Apellidos, @Correo, @Clave, @Activo)", oconnection);
                    // cmd.Parameters.AddWithValue("Nombres", obj.Nombres);
                    // cmd.Parameters.AddWithValue("Apellidos", obj.Apellidos);
                    // cmd.Parameters.AddWithValue("Correo", obj.Correo);
                    // cmd.Parameters.AddWithValue("Clave", obj.Clave);
                    // cmd.Parameters.AddWithValue("Activo", obj.Activo);
                    // oconnection.Open();
                    // cmd.ExecuteNonQuery();
                    // idautogenerated = Convert.ToInt32(cmd.Parameters["Resultado"].Value);
                    // Mensaje = cmd.Parameters["Mensaje"].Value.ToString();


                }
            }
            catch (Exception ex)
            {
                idautogenerated = 0;
                Mensaje = ex.Message;
            }
            return idautogenerated;
        }
        public bool Update(Usuario obj, out string Mensaje)
        {
            bool result = false;
            Mensaje = string.Empty;
            try
            {
                using (SqlConnection oconnection = new SqlConnection(Connection.cn))
                {
                    SqlCommand cmd = new SqlCommand("sp_EditUser", oconnection);
                    cmd.Parameters.AddWithValue("IdUsuario", obj.IdUsuario);
                    cmd.Parameters.AddWithValue("Nombres", obj.Nombres);
                    cmd.Parameters.AddWithValue("Apellidos", obj.Apellidos);
                    cmd.Parameters.AddWithValue("Correo", obj.Correo);
                    cmd.Parameters.AddWithValue("Clave", obj.Clave);
                    cmd.Parameters.AddWithValue("Activo", obj.Activo);
                    cmd.Parameters.Add("Resultado", SqlDbType.Int).Direction = ParameterDirection.Output;
                    cmd.Parameters.Add("Mensaje", SqlDbType.VarChar, 500).Direction = ParameterDirection.Output;
                    cmd.CommandType = CommandType.StoredProcedure;
                    oconnection.Open();
                    cmd.ExecuteNonQuery();
                    result = Convert.ToBoolean(cmd.Parameters["Resultado"].Value);
                    Mensaje = cmd.Parameters["Mensaje"].Value.ToString();
                }
            }
            catch (Exception ex)
            {
                result = false;
                Mensaje = ex.Message;
            }
            return result;
        }
        public bool Delete(int id, out string Mensaje)
        {
            bool result = false;
            Mensaje = string.Empty;
            try
            {
                using (SqlConnection oconnection = new SqlConnection(Connection.cn))
                {
                    SqlCommand cmd = new SqlCommand("delete top (1) from USUARIO where IdUsuario = @IdUsuario", oconnection);
                    cmd.Parameters.AddWithValue("@id", id);
                    cmd.CommandType = CommandType.Text;
                    oconnection.Open();
                    result = cmd.ExecuteNonQuery() > 0 ? true : false;
                }
            }
            catch (Exception ex)
            {
                result = false;
                Mensaje = ex.Message;
            }
            return result;
        }
    }
}
